@page "/customer/create"
@page "/customer/{id:int}/edit"
@inject ICustomerService CustomerService

@if(Id == null)
{
    
    <h3>Add A New Customer</h3>

}
else{
    <h3>Edit @customer.FirstName @customer.LastName</h3>
}

<EditForm Model="customer" OnSubmit="HandleSubmit">
    <div>
        <label for="firstName">First Name</label>
        <InputText id="firstName" @bind-Value="customer.FirstName" class="form-control"></InputText>
    </div>
    <div>
        <label for="lastName">Last Name</label>
        <InputText id="lastName" @bind-Value="customer.LastName" class="form-control"></InputText>
    </div><div>
        <label for="phoneNumber">Phone Number</label>
        <InputText id="phoneNumber" @bind-Value="customer.PhoneNumber" class="form-control"></InputText>
    </div>
    <div>
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="customer.Email" class="form-control"></InputText>
    </div>
    
 
    <br/>

    <button type="submit" class="btn btn-primary">@btnText</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    CustomerDto customer = new CustomerDto();

    string btnText = string.Empty;

    protected override void OnInitialized()
    {
        btnText = Id == null ? "Add Customer" : "Update Product Info";
    }

        protected override async Task OnParametersSetAsync()
    {
        if(Id == null)
        {
            //Create Product
        }
        else
        {
            
        }
    }

    async Task HandleSubmit()
    {
        if(Id == null)
        {
            await CustomerService.CreateCustomer(customer);
        }
        else
        {
            //await ProductService.UpdateProduct(product);
        }
    }

}