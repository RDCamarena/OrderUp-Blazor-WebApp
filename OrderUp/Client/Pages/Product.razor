@page "/product"
@page "/product/{id:int}"
@inject IProductService ProductService

@if(Id == null)
{
    
    <h3>Create A New Product</h3>

}
else{
    <h3>Edit @product.ProductName</h3>
}

<EditForm Model="product" OnSubmit="HandleSubmit">
    <div>
        <label for="productname">Product Name</label>
        <InputText id="productname" @bind-Value="product.ProductName" class="form-control"></InputText>
    </div>
    <div>
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="product.Description" class="form-control"></InputText>
    </div>
    <div>
        <label for="price">Price</label>
        <InputNumber id="price" @bind-Value="product.Price" class="form-control"></InputNumber>
    </div>
 
    <br/>

    <button type="submit" class="btn btn-primary">@btnText</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    ProductDto product = new ProductDto();

    string btnText = string.Empty;

    protected override void OnInitialized()
    {
        btnText = Id == null ? "Add Product" : "Update Product Info";
    }





    protected override async Task OnParametersSetAsync()
    {
        if(Id == null)
        {
            //Create Product
        }
        else
        {
            product = await ProductService.GetSingleProduct((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if(Id == null)
        {
            await ProductService.CreateProduct(product);
        }
        else
        {
            await ProductService.UpdateProduct(product);
        }
    }

    


}
